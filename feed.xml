<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://petergabaldon.github.io/</id><title>Peter Gabaldon</title><subtitle>Hacking, Security Researching, Pentesting/Ethical Hacking, Operating Systems...</subtitle> <updated>2025-08-03T19:00:52+02:00</updated> <author> <name>Peter Gabaldon</name> <uri>https://petergabaldon.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://petergabaldon.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://petergabaldon.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> Â© 2025 Peter Gabaldon </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>FortiGate VPN-SSL Honeypot</title><link href="https://petergabaldon.github.io/posts/FortiGate-VPN-SSL-Honeypot/" rel="alternate" type="text/html" title="FortiGate VPN-SSL Honeypot" /><published>2025-08-02T00:00:00+02:00</published> <updated>2025-08-03T19:00:19+02:00</updated> <id>https://petergabaldon.github.io/posts/FortiGate-VPN-SSL-Honeypot/</id> <content src="https://petergabaldon.github.io/posts/FortiGate-VPN-SSL-Honeypot/" /> <author> <name>Peter Gabaldon</name> </author> <category term="en" /> <category term="FortiGate" /> <category term="VPN" /> <category term="Honeypot" /> <summary> FortiGate VPN-SSL Honeypot The following blog post contains an example of running and configuring the FortiGate VPN-SSL Honeypot project. This project can be found in Github here: https://github.com/PeterGabaldon/Fortigate.VPN-SSL.Honeypot Description and Capabilities A deception honeypot that mimics FortiGate VPN-SSL devices to trap brute force attempts, detect deliberately exfiltrated ... </summary> </entry> <entry><title>Bypass Azure Admin Approval Mode for User Consent Workflow When Enumerating</title><link href="https://petergabaldon.github.io/posts/Bypass-Azure-Admin-Approval-Mode-Enumeration/" rel="alternate" type="text/html" title="Bypass Azure Admin Approval Mode for User Consent Workflow When Enumerating" /><published>2024-10-11T00:00:00+02:00</published> <updated>2024-11-16T19:55:34+01:00</updated> <id>https://petergabaldon.github.io/posts/Bypass-Azure-Admin-Approval-Mode-Enumeration/</id> <content src="https://petergabaldon.github.io/posts/Bypass-Azure-Admin-Approval-Mode-Enumeration/" /> <author> <name>Peter Gabaldon</name> </author> <category term="en" /> <category term="Windows security" /> <category term="Azure" /> <category term="Microsoft" /> <summary> Bypass Azure Admin Approval Mode for User Consent Workflow When Enumerating In this short blog post we will see a trick/technique to enumerate an Azure environment when the User App Consent Workflow is blocked and it is necessary to request permission to an administrator. After the administrator approves the consent the user can user the application. When this mode is set an we attempt to enu... </summary> </entry> <entry><title>Finding TeamViewer 0days - Part III</title><link href="https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-3/" rel="alternate" type="text/html" title="Finding TeamViewer 0days - Part III" /><published>2024-10-04T00:00:00+02:00</published> <updated>2024-10-11T20:57:41+02:00</updated> <id>https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-3/</id> <content src="https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-3/" /> <author> <name>Peter Gabaldon</name> </author> <category term="en" /> <category term="Windows security" /> <category term="TeamViewer" /> <summary> Finding TeamViewer 0days. Part 3: Putting it all together. PARTY TIME :)! Now comes the interesting part. I am sorry about the two last lazy parts, but I wanted to explain the whole process :). Because I had spoiled you, we already know that TV is not filtering the parameter sent by the client to ask for the driver installation nor signature check, etc. So the idea that we will review in thi... </summary> </entry> <entry><title>Finding TeamViewer 0days - Part II</title><link href="https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-2/" rel="alternate" type="text/html" title="Finding TeamViewer 0days - Part II" /><published>2024-10-04T00:00:00+02:00</published> <updated>2024-10-04T00:00:00+02:00</updated> <id>https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-2/</id> <content src="https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-2/" /> <author> <name>Peter Gabaldon</name> </author> <category term="en" /> <category term="Windows security" /> <category term="TeamViewer" /> <summary> Finding TeamViewer 0days. Part 2: Reversing the Authentication Protocol I started reversing the client in order to find how the authentication was being made. I will skip this whole part as I finally ended understanding the authentication method revering the service. Reversing the client was a tedious task because of Overlapped I/O, multiple threads handling it, CFG and so on. This conducted ... </summary> </entry> <entry><title>Finding TeamViewer 0days - Part I</title><link href="https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-1/" rel="alternate" type="text/html" title="Finding TeamViewer 0days - Part I" /><published>2024-10-04T00:00:00+02:00</published> <updated>2024-10-11T20:57:41+02:00</updated> <id>https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-1/</id> <content src="https://petergabaldon.github.io/posts/Finding-TeamViewer-0days-Part-1/" /> <author> <name>Peter Gabaldon</name> </author> <category term="en" /> <category term="Windows security" /> <category term="TeamViewer" /> <summary> Finding TeamViewer 0days. Part 1: The story begins This series of blog posts are about some findings related to TeamViewer (TV) IPC communication with its SYSTEM service. I was trying to find some vulnerabilities in TeamViewer client and ended up researching how the communication with its helper service works. After being able to spoof (just some simple authentication as we will see) a valid T... </summary> </entry> </feed>
